nextflow_pipeline {

    name "Test nf-core/viralrecon main.nf"
    script "main.nf"

    test("Illumina Metagenomics Arctic Minimal") {

        options "-profile test_sispa,docker"

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(path("$outputDir/pipeline_info/software_versions.yml")).match("software_versions") },

                { assert new File("$outputDir/assembly/minia/abacas/SRR11140744.abacas.MULTIFASTA.fa").exists() },
                { assert new File("$outputDir/assembly/minia/abacas/SRR11140746.abacas.MULTIFASTA.fa").exists() },
                { assert new File("$outputDir/assembly/minia/abacas/SRR11140748.abacas.MULTIFASTA.fa").exists() },
                { assert new File("$outputDir/assembly/minia/abacas/SRR11140750.abacas.MULTIFASTA.fa").exists() },
                { assert new File("$outputDir/assembly/minia/blastn/SRR11140744.blastn.txt").exists() },
                { assert new File("$outputDir/assembly/minia/blastn/SRR11140746.blastn.txt").exists() },
                { assert new File("$outputDir/assembly/minia/blastn/SRR11140748.blastn.txt").exists() },
                { assert new File("$outputDir/assembly/minia/blastn/SRR11140750.blastn.txt").exists() },
                { assert new File("$outputDir/assembly/minia/quast/genome_stats/genome_info.txt").exists() },
                { assert new File("$outputDir/assembly/minia/quast/report.txt").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140744.contigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140744.h5").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140744.unitigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140746.contigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140746.h5").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140746.unitigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140748.contigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140748.h5").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140748.unitigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140750.contigs.fa").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140750.h5").exists() },
                { assert new File("$outputDir/assembly/minia/SRR11140750.unitigs.fa").exists() },               

                { assert snapshot(path("$outputDir/assembly/spades/rnaviral/abacas/SRR11140744.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/spades/rnaviral/abacas/SRR11140746.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/spades/rnaviral/abacas/SRR11140748.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/spades/rnaviral/abacas/SRR11140750.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/spades/rnaviral/blastn/").list()).match("spades") },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140744.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140744.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140744.contigs.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140746.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140746.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140746.contigs.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140748.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140748.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140748.contigs.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140750.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140750.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/SRR11140750.contigs.fa.gz").exists() }, 
                { assert new File("$outputDir/assembly/spades/rnaviral/quast/genome_stats/genome_info.txt").exists() },
                { assert new File("$outputDir/assembly/spades/rnaviral/quast/report.txt").exists() },                            

                { assert snapshot(path("$outputDir/assembly/unicycler/abacas/SRR11140744.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/unicycler/abacas/SRR11140746.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/unicycler/abacas/SRR11140748.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/unicycler/abacas/SRR11140750.abacas.MULTIFASTA.fa"),
                                  path("$outputDir/assembly/unicycler/blastn/").list()).match("unicycler") },
                { assert new File("$outputDir/assembly/unicycler/SRR11140744.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140744.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140746.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140746.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140748.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140748.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140750.assembly.gfa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/SRR11140750.scaffolds.fa.gz").exists() },
                { assert new File("$outputDir/assembly/unicycler/quast/genome_stats/genome_info.txt").exists() },
                { assert new File("$outputDir/assembly/unicycler/quast/report.txt").exists() },

                { assert new File("$outputDir/fastp/log/SRR11140744.fastp.log").exists() },
                { assert new File("$outputDir/fastp/log/SRR11140746.fastp.log").exists() },
                { assert new File("$outputDir/fastp/log/SRR11140748.fastp.log").exists() },
                { assert new File("$outputDir/fastp/log/SRR11140750.fastp.log").exists() },

                { assert snapshot(path("$outputDir/kraken2/").list()).match("kraken") },

                { assert snapshot(path("$outputDir/multiqc/summary_assembly_metrics_mqc.csv"),
                                  path("$outputDir/multiqc/summary_variants_metrics_mqc.csv"),
                                  path("$outputDir/pipeline_info/samplesheet.valid.csv")).match("multiqc") },

                { assert snapshot(path("$outputDir/variants/bowtie2/log/").list()).match("variants_bowtie2") },
                { assert new File("$outputDir/variants/bowtie2/SRR11140744.sorted.bam").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140746.sorted.bam").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140748.sorted.bam").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140750.sorted.bam").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140744.sorted.bam.bai").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140746.sorted.bam.bai").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140748.sorted.bam.bai").exists() },
                { assert new File("$outputDir/variants/bowtie2/SRR11140750.sorted.bam.bai").exists() },

                { assert snapshot(path("$outputDir/variants/bcftools/variants_long_table.csv")).match("variants_bcftools") },
                { assert new File("$outputDir/variants/bcftools/SRR11140744.vcf.gz").exists() },
                { assert new File("$outputDir/variants/bcftools/SRR11140746.vcf.gz").exists() },
                { assert new File("$outputDir/variants/bcftools/SRR11140748.vcf.gz").exists() },
                { assert new File("$outputDir/variants/bcftools/SRR11140744.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/variants/bcftools/SRR11140746.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/variants/bcftools/SRR11140748.vcf.gz.tbi").exists() }
            )
        }
    }
}
