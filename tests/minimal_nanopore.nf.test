nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "nf-core/viralrecon"

    test("Nanopore Amplicon") {

        options "-profile test_nanopore,docker"

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(path("$outputDir/pipeline_info/software_versions.yml")).match("software_versions") },
                { assert snapshot(path("$outputDir/multiqc/nanopolish/summary_variants_metrics_mqc.csv")).match("multiqc") },
                { assert snapshot(path("$outputDir/nanoplot/SAMPLE_01/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_02/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_03/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_04/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_05/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_06/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_07/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_08/NanoStats.txt"),
                                  path("$outputDir/nanoplot/SAMPLE_09/NanoStats.txt")).match("nanoplot") },
                { assert snapshot(path("$outputDir/nanopolish/mosdepth/amplicon/all_samples.mosdepth.heatmap.tsv"),
                                  path("$outputDir/nanopolish/nextclade/").list(),
                                  path("$outputDir/nanopolish/pangolin/").list(),
                                  path("$outputDir/nanopolish/samtools_stats/").list(),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_01.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_01.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_02.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_02.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_03.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_03.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_04.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_04.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_05.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_05.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_06.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_06.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_07.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_07.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_08.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_08.snpeff.vcf.gz"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_09.snpeff.genes.txt"),
                                  path("$outputDir/nanopolish/snpeff/SAMPLE_09.snpeff.vcf.gz")).match("nanopolish") },
                { assert new File("$outputDir/nanopolish/mosdepth/amplicon/all_samples.mosdepth.coverage.tsv").exists() }, 
                { assert new File("$outputDir/nanopolish/mosdepth/amplicon/all_samples.mosdepth.heatmap.pdf").exists() },
                { assert new File("$outputDir/nanopolish/mosdepth/genome/all_samples.mosdepth.coverage.tsv").exists() },
                { assert new File("$outputDir/nanopolish/variants_long_table.csv").exists() }, 
                { assert new File("$outputDir/nanopolish/SAMPLE_01.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_01.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_02.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_03.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_04.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_05.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_06.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_07.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_08.trimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.consensus.fasta").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.fail.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.mapped.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.mapped.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.merged.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.pass.unique.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.pass.unique.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.pass.vcf.gz").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.pass.vcf.gz.tbi").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.primers.vcf").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.primertrimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.primertrimmed.rg.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.sorted.bam.bai").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.trimmed.rg.sorted.bam").exists() },
                { assert new File("$outputDir/nanopolish/SAMPLE_09.trimmed.rg.sorted.bam.bai").exists() },
                { assert snapshot(path("$outputDir/pycoqc/pycoqc.json")).match("pycoqc") }                           
            )
        }
    }
}
